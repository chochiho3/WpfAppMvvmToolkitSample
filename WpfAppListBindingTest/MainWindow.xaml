<Window
    x:Class="WpfAppListBindingTest.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:WpfAppListBindingTest"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:res="clr-namespace:WpfAppListBindingTest.Resources"
    Title="MainWindow"
    Width="1024"
    Height="900"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    mc:Ignorable="d">
    <Window.Resources>
        <local:TaskResultConverter x:Key="ConvTaskResult" />
    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="KeyDown">
            <!--  완전 꿀팁!!  PassEventArgsToCommand  -->
            <i:InvokeCommandAction Command="{Binding BubblingEventCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="400" />
            <ColumnDefinition Width="200" />
        </Grid.ColumnDefinitions>
        <materialDesign:Card Grid.Row="0" Grid.Column="0">
            <StackPanel Margin="10">
                <TextBlock Margin="5" Text="{Binding FullAddress}" />
                <TextBox
                    Margin="5"
                    materialDesign:HintAssist.Hint="{x:Static res:Resource.HintIpAddr}"
                    Cursor="Arrow"
                    Text="{Binding IpAddress, UpdateSourceTrigger=PropertyChanged}" />
                <TextBox
                    Margin="5"
                    materialDesign:HintAssist.Hint="{x:Static res:Resource.HintIpPort}"
                    Cursor="Arrow"
                    Text="{Binding Port, UpdateSourceTrigger=PropertyChanged}" />

                <Button
                    Margin="0,20,0,0"
                    Command="{Binding CommandReturnCommand}"
                    Content="{Binding CommandReturnCommand.ExecutionTask, Converter={StaticResource ConvTaskResult}}" />
                <TextBlock Text="{Binding CommandReturnCommand.ExecutionTask.Status}" />

                <Button
                    Margin="5"
                    Command="{Binding ConnectToServerCommand}"
                    Content="{x:Static res:Resource.ButtonConnect}"
                    Cursor="Hand" />
                <Button
                    Margin="5"
                    Command="{Binding CheckValidationCommand}"
                    Content="{x:Static res:Resource.ButtonValid}"
                    Cursor="Hand" />


                <TextBox
                    Name="SubWindowMsg"
                    materialDesign:HintAssist.Hint="{x:Static res:Resource.HintSendSubControl}"
                    Cursor="Arrow" />
                <Button Command="{Binding SendMessageCommand}" CommandParameter="{Binding ElementName=SubWindowMsg, Path=Text}">Send To SubWindow</Button>
            </StackPanel>
        </materialDesign:Card>
        <ListBox
            Grid.Row="1"
            Grid.Column="0"
            ItemsSource="{Binding LogObjs}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150" />
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding RecordTime}" />
                        <TextBlock Grid.Column="1" Text="{Binding Message}" />
                        <TextBlock Grid.Column="2" Text="{Binding Writer}" />
                        <Button
                            Grid.Column="3"
                            Command="{Binding DataContext.DeleteOneItemCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                            CommandParameter="{Binding}">
                            Del
                        </Button>
                        <Button
                            Grid.Column="4"
                            materialDesign:ButtonProgressAssist.IsIndeterminate="{Binding AddStringCommand.IsRunning}"
                            materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding AddStringCommand.IsRunning}"
                            materialDesign:ButtonProgressAssist.Value="-1"
                            Command="{Binding AddStringCommand}"
                            CommandParameter="{Binding}"
                            Style="{StaticResource MaterialDesignRaisedButton}">
                            Insert
                        </Button>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <StackPanel Grid.Row="2" Grid.Column="0">
            <Button Command="{Binding SetSubViewCommand}" CommandParameter="SubWindow">서브컨텐츠 변경 A</Button>
            <Button Command="{Binding SetSubViewCommand}" CommandParameter="SubWindow2">서브컨텐츠 변경 B</Button>
            <Button Command="{Binding SetSubViewCommand}" CommandParameter="">서브컨텐츠 삭제</Button>
        </StackPanel>
        <ContentControl
            Grid.Row="3"
            Grid.Column="0"
            Content="{Binding SubContent}" />


    </Grid>
</Window>
